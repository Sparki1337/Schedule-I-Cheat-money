import json
import os
import re
import glob
import shutil
import datetime
import time
import sys
import itertools
import threading
import tkinter as tk
from tkinter import filedialog

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –º–æ–¥—É–ª–µ–π
from settings import (
    CHANGELOG, load_config, save_config, program_settings, 
    select_game_exe, toggle_animations, toggle_auto_launch
)
from utils import (
    animate_loading, progress_bar, animated_text, animate_countdown,
    create_backup, restore_backup, launch_game, show_changelog, check_yes_input
)

def show_current_balance():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –¥–µ–Ω–µ–≥ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è—Ö"""
    # –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –∏–≥—Ä—ã
    base_saves_path = os.path.expandvars(r"%USERPROFILE%\AppData\LocalLow\TVGS\Schedule I\Saves")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–∏
    if not os.path.exists(base_saves_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {base_saves_path}")
        return
    
    # –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞–ø–æ–∫
    stop_event = threading.Event()
    loading_thread = threading.Thread(target=animate_loading, args=(stop_event, "–ü–æ–∏—Å–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π"))
    loading_thread.daemon = True
    loading_thread.start()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_folders = [f for f in os.listdir(base_saves_path) if os.path.isdir(os.path.join(base_saves_path, f))]
    time.sleep(1)  # –î–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    stop_event.set()
    loading_thread.join()
    
    if not user_folders:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π.")
        return
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–∞—Ö
    balances = []
    
    # –ê–Ω–∏–º–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–æ–≤
    animated_text("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π...", 0.02)
    
    for user_folder in user_folders:
        user_path = os.path.join(base_saves_path, user_folder)
        
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–∞–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        save_folders = [f for f in os.listdir(user_path) if f.startswith("SaveGame_")]
        
        for folder in save_folders:
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            save_time_str = folder.replace("SaveGame_", "")
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
                save_time = datetime.datetime.strptime(save_time_str, "%Y-%m-%d-%H-%M-%S")
                formatted_time = save_time.strftime("%d.%m.%Y %H:%M:%S")
            except ValueError:
                formatted_time = save_time_str
            
            # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –±–∞–ª–∞–Ω—Å–µ
            save_data = {
                "user": user_folder,
                "save": folder,
                "balance": None,
                "cash": None,
                "time": formatted_time
            }
            
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–µ–Ω–µ–≥
            money_file_path = os.path.join(user_path, folder, "Money.json")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç—É
            if os.path.exists(money_file_path):
                try:
                    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
                    with open(money_file_path, 'r', encoding='utf-8') as file:
                        data = json.load(file)
                    
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –±–∞–ª–∞–Ω—Å, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
                    if "OnlineBalance" in data:
                        save_data["balance"] = data["OnlineBalance"]
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {folder}/Money.json: {str(e)}")
            
            # –ò—â–µ–º –Ω–∞–ª–∏—á–Ω—ã–µ –¥–µ–Ω—å–≥–∏
            player_folder_path = os.path.join(user_path, folder, "Players", "Player_0")
            if os.path.exists(player_folder_path):
                inventory_file_path = os.path.join(player_folder_path, "Inventory.json")
                if os.path.exists(inventory_file_path):
                    try:
                        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
                        with open(inventory_file_path, 'r', encoding='utf-8') as file:
                            inventory_data = json.load(file)
                            
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ Items
                        if "Items" in inventory_data:
                            # –ò—â–µ–º –∑–∞–ø–∏—Å—å –æ –Ω–∞–ª–∏—á–Ω—ã—Ö –≤ —Å–ø–∏—Å–∫–µ Items
                            for item_str in inventory_data["Items"]:
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ CashData
                                if "CashData" in item_str and "CashBalance" in item_str:
                                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ CashBalance —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
                                    cash_pattern = r'CashBalance\":([0-9.]+)'
                                    match = re.search(cash_pattern, item_str)
                                    
                                    if match:
                                        save_data["cash"] = float(match.group(1))
                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è {folder}: {str(e)}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –±–∞–ª–∞–Ω—Å–æ–≤
            if save_data["balance"] is not None or save_data["cash"] is not None:
                balances.append(save_data)
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if balances:
        print("\n" + "=" * 100)
        print(f"{'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å':<15} {'–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ':<25} {'–í—Ä–µ–º—è':<20} {'–ë–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞':>15} {'–ù–∞–ª–∏—á–Ω—ã–µ':>15}")
        print("=" * 100)
        
        for bal in sorted(balances, key=lambda x: x["time"], reverse=True):
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            balance_str = f"{bal['balance']}" if bal['balance'] is not None else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            cash_str = f"{bal['cash']:.2f}" if bal['cash'] is not None else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            
            print(f"{bal['user']:<15} {bal['save']:<25} {bal['time']:<20} {balance_str:>15} {cash_str:>15}")
        
        print("=" * 100)
        print(f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π: {len(balances)}")
    else:
        print("‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –±–∞–ª–∞–Ω—Å–æ–º –¥–µ–Ω–µ–≥.")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")

def load_backup():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    # –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –∏–≥—Ä—ã
    base_saves_path = os.path.expandvars(r"%USERPROFILE%\AppData\LocalLow\TVGS\Schedule I\Saves")
    
    if not os.path.exists(base_saves_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {base_saves_path}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ –±—ç–∫–∞–ø–∞
    root = tk.Tk()
    root.withdraw()
    
    animated_text("üîç –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–µ–π...", 0.02)
    
    # –í—ã–±–∏—Ä–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ
    desktop_path = os.path.expandvars(r"%USERPROFILE%\Desktop")
    backup_path = filedialog.askdirectory(
        title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–µ–π",
        initialdir=desktop_path
    )
    
    root.destroy()
    
    if not backup_path:
        animated_text("‚ùå –í—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω", 0.02)
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π
    is_valid_backup = False
    backup_folders = [f for f in os.listdir(backup_path) if os.path.isdir(os.path.join(backup_path, f))]
    
    for folder in backup_folders:
        subfolder_path = os.path.join(backup_path, folder)
        if os.path.isdir(subfolder_path):
            save_folders = [f for f in os.listdir(subfolder_path) if f.startswith("SaveGame_")]
            if save_folders:
                is_valid_backup = True
                break
    
    if not is_valid_backup:
        animated_text("‚ùå –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π!", 0.02)
        animated_text("–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–∞–ø–∫–∏ —Å –∏–º–µ–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–æ–¥–ø–∞–ø–∫–∏ SaveGame_*", 0.02)
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    confirmation = input("‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ–Ω–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è! –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π? (–¥/–Ω): ")
    
    if check_yes_input(confirmation):
        backup_current = create_backup(base_saves_path)
        if not backup_current:
            confirm_continue = input("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±—ç–∫–∞–ø–∞? (–¥/–Ω): ")
            if not check_yes_input(confirm_continue):
                animated_text("‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", 0.02)
                input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                return
    
    # –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    final_confirm = input(f"\n‚ö†Ô∏è –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑:\n{backup_path}\n\n–í—Å–µ —Ç–µ–∫—É—â–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã! (–¥/–Ω): ")
    
    if not check_yes_input(final_confirm):
        animated_text("‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", 0.02)
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
    if restore_backup(backup_path, base_saves_path):
        animated_text("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –±—ç–∫–∞–ø–∞", 0.02)
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –±—ç–∫–∞–ø–∞ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        delete_confirm = input("\nüóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É –±—ç–∫–∞–ø–∞ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è? (–¥/–Ω): ")
        
        if check_yes_input(delete_confirm):
            # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç
            animate_countdown(3, "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–∫–∏ –±—ç–∫–∞–ø–∞ —á–µ—Ä–µ–∑")
            
            try:
                shutil.rmtree(backup_path)
                animated_text(f"‚úÖ –ü–∞–ø–∫–∞ –±—ç–∫–∞–ø–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞: {backup_path}", 0.02)
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏ –±—ç–∫–∞–ø–∞: {str(e)}")
    else:
        animated_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞", 0.02)
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

def patch_cash_inventory():
    """–ò–∑–º–µ–Ω—è–µ—Ç –Ω–∞–ª–∏—á–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –≤ —Ñ–∞–π–ª–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏–≥—Ä–æ–∫–∞"""
    # –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –∏–≥—Ä—ã
    base_saves_path = os.path.expandvars(r"%USERPROFILE%\AppData\LocalLow\TVGS\Schedule I\Saves")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_config()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–∏
    if not os.path.exists(base_saves_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {base_saves_path}")
        return
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É–º–º—É –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    while True:
        try:
            custom_cash = input("üí∏ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ù–ê–õ–ò–ß–ù–´–• –¥–µ–Ω–µ–≥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: ")
            if custom_cash.strip() == "":
                print("‚ö†Ô∏è –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                continue
            custom_cash = float(custom_cash)
            break
        except ValueError:
            print("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–º–æ–∂–Ω–æ —Å –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Ç–æ—á–∫–æ–π)!")
    
    animated_text(f"üíµ –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—É–º–º–∞ –Ω–∞–ª–∏—á–Ω—ã—Ö: {custom_cash}", 0.02)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    backup_path = create_backup(base_saves_path)
    if not backup_path:
        user_choice = input("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±—ç–∫–∞–ø–∞? (–¥/–Ω): ")
        if not check_yes_input(user_choice):
            return
    
    # –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞–ø–æ–∫
    stop_event = threading.Event()
    loading_thread = threading.Thread(target=animate_loading, args=(stop_event, "–ü–æ–∏—Å–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π"))
    loading_thread.daemon = True
    loading_thread.start()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_folders = [f for f in os.listdir(base_saves_path) if os.path.isdir(os.path.join(base_saves_path, f))]
    time.sleep(1)  # –î–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    stop_event.set()
    loading_thread.join()
    
    if not user_folders:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π.")
        return
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    total_files_processed = 0
    total_files_updated = 0
    files_to_update = []
    
    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    animated_text("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π...", 0.02)
    
    for user_folder in user_folders:
        user_path = os.path.join(base_saves_path, user_folder)
        
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–∞–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        save_folders = [f for f in os.listdir(user_path) if f.startswith("SaveGame_")]
        
        for folder in save_folders:
            # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ Player_0)
            player_folder_path = os.path.join(user_path, folder, "Players", "Player_0")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
            if not os.path.exists(player_folder_path):
                continue
            
            # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
            inventory_file_path = os.path.join(player_folder_path, "Inventory.json")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            if not os.path.exists(inventory_file_path):
                continue
            
            try:
                total_files_processed += 1
                
                # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
                with open(inventory_file_path, 'r', encoding='utf-8') as file:
                    inventory_data = json.load(file)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ Items
                if "Items" in inventory_data:
                    # –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ñ–∞–π–ª
                    need_update = False
                    
                    # –ò—â–µ–º –∑–∞–ø–∏—Å—å –æ –Ω–∞–ª–∏—á–Ω—ã—Ö –≤ —Å–ø–∏—Å–∫–µ Items
                    for i, item_str in enumerate(inventory_data["Items"]):
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ CashData
                        if "CashData" in item_str and "CashBalance" in item_str:
                            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ CashBalance —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
                            cash_pattern = r'CashBalance\":([0-9.]+)'
                            match = re.search(cash_pattern, item_str)
                            
                            if match:
                                current_cash = float(match.group(1))
                                
                                # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
                                if current_cash != custom_cash:
                                    # –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ CashBalance
                                    updated_item = item_str.replace(
                                        f'CashBalance":{current_cash}',
                                        f'CashBalance":{custom_cash}'
                                    )
                                    
                                    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–∫–µ Items
                                    inventory_data["Items"][i] = updated_item
                                    need_update = True
                    
                    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ñ–∞–π–ª, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    if need_update:
                        files_to_update.append((inventory_file_path, inventory_data, user_folder, folder))
                
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {folder}: {str(e)}")
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    if files_to_update:
        animated_text(f"üîÑ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(files_to_update)}", 0.02)
        print()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
        for i, (file_path, data, user_folder, folder) in enumerate(files_to_update):
            progress_bar(i + 1, len(files_to_update), 
                         prefix=f'–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ({i+1}/{len(files_to_update)})', 
                         suffix='–ó–∞–≤–µ—Ä—à–µ–Ω–æ', length=40)
            
            try:
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
                with open(file_path, 'w', encoding='utf-8') as file:
                    json.dump(data, file, indent=4)
                
                total_files_updated += 1
                time.sleep(0.2)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
            except Exception as e:
                print(f"\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ {folder}: {str(e)}")
        
        print()
        animated_text(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏: {total_files_updated} –∏–∑ {total_files_processed}", 0.02)
    else:
        animated_text(f"‚ÑπÔ∏è –§–∞–π–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –≤—Å–µ –±–∞–ª–∞–Ω—Å—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ {custom_cash}", 0.02)
    
    # –í –∫–æ–Ω—Ü–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
    if config.getboolean('Settings', 'auto_launch_game', fallback=False):
        launch_choice = input("\nüéÆ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å? (–¥/–Ω): ")
        if check_yes_input(launch_choice):
            launch_game()

def patch_money_file():
    """–ò–∑–º–µ–Ω—è–µ—Ç –¥–µ–Ω—å–≥–∏ –≤ —Ñ–∞–π–ª–∞—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π"""
    # –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –∏–≥—Ä—ã
    base_saves_path = os.path.expandvars(r"%USERPROFILE%\AppData\LocalLow\TVGS\Schedule I\Saves")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_config()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–∏
    if not os.path.exists(base_saves_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {base_saves_path}")
        return
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É–º–º—É –¥–µ–Ω–µ–≥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    while True:
        try:
            custom_money = input("üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–µ–Ω–µ–≥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: ")
            if custom_money.strip() == "":
                print("‚ö†Ô∏è –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                continue
            custom_money = int(custom_money)
            break
        except ValueError:
            print("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")
    
    animated_text(f"üíµ –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—É–º–º–∞: {custom_money}", 0.02)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    backup_path = create_backup(base_saves_path)
    if not backup_path:
        user_choice = input("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±—ç–∫–∞–ø–∞? (–¥/–Ω): ")
        if not check_yes_input(user_choice):
            return
    
    # –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞–ø–æ–∫
    stop_event = threading.Event()
    loading_thread = threading.Thread(target=animate_loading, args=(stop_event, "–ü–æ–∏—Å–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π"))
    loading_thread.daemon = True
    loading_thread.start()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_folders = [f for f in os.listdir(base_saves_path) if os.path.isdir(os.path.join(base_saves_path, f))]
    time.sleep(1)  # –î–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    stop_event.set()
    loading_thread.join()
    
    if not user_folders:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π.")
        return
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    total_files_processed = 0
    total_files_updated = 0
    files_to_update = []
    
    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    animated_text("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π...", 0.02)
    
    for user_folder in user_folders:
        user_path = os.path.join(base_saves_path, user_folder)
        
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–∞–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        save_folders = [f for f in os.listdir(user_path) if f.startswith("SaveGame_")]
        
        for folder in save_folders:
            money_file_path = os.path.join(user_path, folder, "Money.json")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            if not os.path.exists(money_file_path):
                continue
            
            try:
                total_files_processed += 1
                
                # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
                with open(money_file_path, 'r', encoding='utf-8') as file:
                    data = json.load(file)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å
                if "OnlineBalance" in data and data["OnlineBalance"] != custom_money:
                    files_to_update.append((money_file_path, data, user_folder, folder))
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {folder}: {str(e)}")
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    if files_to_update:
        animated_text(f"üîÑ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(files_to_update)}", 0.02)
        print()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
        for i, (file_path, data, user_folder, folder) in enumerate(files_to_update):
            progress_bar(i + 1, len(files_to_update), 
                         prefix=f'–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ({i+1}/{len(files_to_update)})', 
                         suffix='–ó–∞–≤–µ—Ä—à–µ–Ω–æ', length=40)
            
            try:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                data["OnlineBalance"] = custom_money
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
                with open(file_path, 'w', encoding='utf-8') as file:
                    json.dump(data, file, indent=2)
                
                total_files_updated += 1
                time.sleep(0.2)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
            except Exception as e:
                print(f"\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ {folder}: {str(e)}")
        
        print()
        animated_text(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_files_updated} –∏–∑ {total_files_processed}", 0.02)
    else:
        animated_text(f"‚ÑπÔ∏è –§–∞–π–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –≤—Å–µ –±–∞–ª–∞–Ω—Å—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ {custom_money}", 0.02)
    
    # –í –∫–æ–Ω—Ü–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
    if config.getboolean('Settings', 'auto_launch_game', fallback=False):
        launch_choice = input("\nüéÆ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å? (–¥/–Ω): ")
        if check_yes_input(launch_choice):
            launch_game()

def edit_money_menu():
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–µ–Ω–µ–≥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
    while True:
        print("\n" + "=" * 50)
        animated_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–µ–Ω–µ–≥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:", 0.02)
        animated_text("1. üí≥ –î–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç—É (Money.json)", 0.02)
        animated_text("2. üí∏ –ù–∞–ª–∏—á–Ω—ã–µ –¥–µ–Ω—å–≥–∏ (Inventory.json)", 0.02)
        animated_text("3. üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", 0.02)
        print("=" * 50)
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-3): ")
        
        if choice == "1":
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–∞—Ç—á–∞ —Å—á–µ—Ç–∞
            patch_money_file()
            return
        elif choice == "2":
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–∞—Ç—á–∞ –Ω–∞–ª–∏—á–Ω—ã—Ö
            patch_cash_inventory()
            return
        elif choice == "3":
            return
        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3.")
        
        # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

if __name__ == "__main__":
    # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –∏ –≤—ã–≤–æ–¥–∏–º –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    os.system('cls' if os.name == 'nt' else 'clear')
    
    title = """
    ‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó‚ïî‚ïó‚ïî‚ïî‚ïê‚ïó‚ï¶ ‚ï¶  ‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó‚ï¶ ‚ï¶‚ïî‚ïê‚ïó‚ï¶‚ïê‚ïó
    ‚ïë‚ïë‚ïë‚ïë ‚ïë‚ïë‚ïë‚ïë‚ïë‚ï£ ‚ïö‚ï¶‚ïù  ‚ï†‚ïê‚ïù‚ï†‚ïê‚ï£ ‚ïë ‚ïë  ‚ï†‚ïê‚ï£‚ïë‚ï£ ‚ï†‚ï¶‚ïù
    ‚ï© ‚ï©‚ïö‚ïê‚ïù‚ïù‚ïö‚ïù‚ïö‚ïê‚ïù ‚ï©   ‚ï©  ‚ï© ‚ï© ‚ï© ‚ïö‚ïê‚ïù‚ï© ‚ï©‚ïö‚ïê‚ïù‚ï©‚ïö‚ïê
           –¥–ª—è Schedule I v1.8.2 by Sparki)
    """
    
    for line in title.split('\n'):
        animated_text(line, 0.01)
    
    print("-" * 50)
    
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    while True:
        print("\n" + "=" * 50)
        animated_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", 0.02)
        animated_text("1. üíµ –ò–∑–º–µ–Ω–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è—Ö", 0.02)
        animated_text("2. üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å", 0.02)
        animated_text("3. ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã", 0.02)
        animated_text("4. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É", 0.02)
        animated_text("5. üíæ –ó–∞–≥—Ä—É–∑–∏—Ç—å backup", 0.02)
        animated_text("6. üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π (changelog)", 0.02)
        animated_text("7. ‚ùå –í—ã—Ö–æ–¥", 0.02)
        print("=" * 50)
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-7): ")
        
        if choice == "1":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–µ–Ω–µ–≥
            edit_money_menu()
        elif choice == "2":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
            show_current_balance()
        elif choice == "3":
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
            program_settings(animated_text, input, os)
        elif choice == "4":
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
            launch_game()
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        elif choice == "5":
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
            load_backup()
        elif choice == "6":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º changelog
            show_changelog(CHANGELOG)
        elif choice == "7":
            animated_text("\n‚úÖ –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...", 0.02)
            input()
            break
        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7.")
        
        # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
        os.system('cls' if os.name == 'nt' else 'clear')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–Ω–æ–≤–∞
        for line in title.split('\n'):
            animated_text(line, 0.01)
        
        print("-" * 50)